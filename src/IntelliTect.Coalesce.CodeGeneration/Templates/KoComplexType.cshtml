@inherits IntelliTect.Coalesce.Templating.CoalesceTemplate
@using IntelliTect.Coalesce.TypeDefinition
@{
    ClassViewModel model = Model.Model;
    string moduleName = "ViewModels";
    if (!string.IsNullOrWhiteSpace(Model.AreaName))
    {
        moduleName = Model.AreaName + "." + moduleName;
    }
    if (!string.IsNullOrWhiteSpace(Model.ModulePrefix))
    {
        moduleName = Model.ModulePrefix + "." + moduleName;
    }
}

/// <reference path="../coalesce.dependencies.d.ts" />

module @moduleName {
    // *** Complex Type @(model.Name)
    export class @(model.ViewModelClassName)
    {
        // Observables
        @foreach (PropertyViewModel prop in model.Properties.Where(f => f.HasViewModelProperty))
        {
		@:public @(prop.JsVariable): @(prop.Type.TsKnockoutType) = @(prop.Type.JsKnockoutType);
        if (prop.Type.IsEnum)
        { 
        @:public @(prop.JsTextPropertyName) = @(prop.Type.JsKnockoutType);  // Enum Text Value
        }
        }
        constructor(parent: any){
            @foreach (PropertyViewModel prop in model.Properties.Where(f=>f.HasViewModelProperty))
            { 
            @:this.@(prop.JsVariable).subscribe(parent.autoSave);
            }
        }
    }
}
